{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x67c09a12529b4b486dfdda51a4985add7e3ad6809c62beec6273e7a96e420d34",
      "kind": "uups"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xe3cb94b4d0ddd9b8c28b52f2383d736220e7dfb000b12d824b9b735534867717",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x9e8625942278057265273f2a9b08579638ef193767b27f27f4605a2e066cd304",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xc21b9b3cb33a7dfc11bb928aa79c0001c69aa9ff31b3d7a59e379e357526f132",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xe650e872a4e322cff703f8ad6687c32423d758246ec58f6518312a17d05d4de0",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x6c820b922922ff3e232797ec8393361862215572ebd2bec00209223e1a10abe0",
      "kind": "uups"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x3fd65a29f4e35cbb8f91d5dcdbedfa2c17dd2abf8474b8ef8a85521380ff23f1",
      "kind": "uups"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x0bf7663e6639cc50a998028ff3d0e73350315d079ff056f232941cc4c810dc51",
      "kind": "uups"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x0d9cbdde356a863315c2d6bfb3c4ccf714f38c7d94f1b948796ef2e3b4f67cf7",
      "kind": "uups"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x9b23721ee13bac1bad087698582aa0923ac952c337903d1ec39b6930f2fc8bc7",
      "kind": "uups"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xe0c2f2b794ff2a3ce8fdf31905f3448c444a907dd3d60f07c35796c580e2bef7",
      "kind": "uups"
    }
  ],
  "impls": {
    "f7b637d4d40bb4254ad0e9b803ffc642b4ead7e820153bc8f1e6127f186bc186": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x9ddc7b9ff2573a8683b319c23d0a0ad363333e44b46ec4e52c4950fbe718fbd4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1155Market",
            "label": "_itemIds",
            "type": "t_struct(Counter)1071_storage",
            "src": "contracts\\ERC1155Market.sol:14"
          },
          {
            "contract": "ERC1155Market",
            "label": "_itemsSold",
            "type": "t_struct(Counter)1071_storage",
            "src": "contracts\\ERC1155Market.sol:15"
          },
          {
            "contract": "ERC1155Market",
            "label": "_itemsCancelled",
            "type": "t_struct(Counter)1071_storage",
            "src": "contracts\\ERC1155Market.sol:16"
          },
          {
            "contract": "ERC1155Market",
            "label": "listingPrice",
            "type": "t_uint256",
            "src": "contracts\\ERC1155Market.sol:17"
          },
          {
            "contract": "ERC1155Market",
            "label": "maxRoyaltiesBasisPoints",
            "type": "t_uint256",
            "src": "contracts\\ERC1155Market.sol:18"
          },
          {
            "contract": "ERC1155Market",
            "label": "owners",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\ERC1155Market.sol:45"
          },
          {
            "contract": "ERC1155Market",
            "label": "idToMarketItem",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)1283_storage)",
            "src": "contracts\\ERC1155Market.sol:47"
          }
        ],
        "types": {
          "t_struct(Counter)1071_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)1283_storage)": {
            "label": "mapping(uint256 => struct ERC1155Market.MarketItem)"
          },
          "t_struct(MarketItem)1283_storage": {
            "label": "struct ERC1155Market.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "quantity",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_enum(MarketItemStatus)1267"
              }
            ]
          },
          "t_enum(MarketItemStatus)1267": {
            "label": "enum ERC1155Market.MarketItemStatus",
            "members": [
              "Active",
              "Sold",
              "Cancelled"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "63334d1cde8878534b92e7fdd65f888eed6337488cb7f02e1488107200dbc33f": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x9f3ab3c6a374371fb0727dca9a6b47a67f896b29db0c8aa50d135beb958f0c9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "ERC2981Royalties",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(Royalty)3509_storage)",
            "src": "contracts\\ERC2981Royalties.sol:12"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "RarestNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)2394_storage",
            "src": "contracts\\RarestNft.sol:15"
          },
          {
            "contract": "RarestNft",
            "label": "marketAddress",
            "type": "t_address",
            "src": "contracts\\RarestNft.sol:18"
          },
          {
            "contract": "RarestNft",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\RarestNft.sol:21"
          },
          {
            "contract": "RarestNft",
            "label": "_hashes",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\RarestNft.sol:23"
          }
        ],
        "types": {
          "t_struct(Counter)2394_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(Royalty)3509_storage)": {
            "label": "mapping(uint256 => struct ERC2981Royalties.Royalty)"
          },
          "t_struct(Royalty)3509_storage": {
            "label": "struct ERC2981Royalties.Royalty",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    }
  }
}
